{
  "entities": {
    "UserProfile": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "UserProfile",
      "type": "object",
      "description": "Represents a user profile in the EnrollEase platform.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user profile."
        },
        "email": {
          "type": "string",
          "description": "User's email address.",
          "format": "email"
        },
        "firstName": {
          "type": "string",
          "description": "User's first name."
        },
        "lastName": {
          "type": "string",
          "description": "User's last name."
        },
        "photoURL": {
          "type": "string",
          "description": "URL of the user's profile photo.",
          "format": "uri"
        },
        "role": {
          "type": "string",
          "description": "User's role (student, institute, admin)."
        }
      },
      "required": [
        "id",
        "email",
        "firstName",
        "lastName",
        "role"
      ]
    },
    "Note": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Note",
      "type": "object",
      "description": "Represents a student's note.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the note."
        },
        "userId": {
          "type": "string",
          "description": "Reference to UserProfile. (Relationship: UserProfile 1:N Note)"
        },
        "content": {
          "type": "string",
          "description": "Content of the note."
        },
        "createdAt": {
          "type": "string",
          "description": "Date and time when the note was created.",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "description": "Date and time when the note was last updated.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "content",
        "createdAt",
        "updatedAt"
      ]
    },
    "Course": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Course",
      "type": "object",
      "description": "Represents a course offered by an institute.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the course."
        },
        "instituteId": {
          "type": "string",
          "description": "Reference to UserProfile (as institute). (Relationship: UserProfile 1:N Course)"
        },
        "name": {
          "type": "string",
          "description": "Name of the course."
        },
        "description": {
          "type": "string",
          "description": "Description of the course."
        },
        "studentIds": {
          "type": "array",
          "description": "References to UserProfiles (as students) enrolled in the course. (Relationship: UserProfile N:N Course)",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "instituteId",
        "name",
        "description"
      ]
    },
    "Announcement": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Announcement",
      "type": "object",
      "description": "Represents a system-wide announcement.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the announcement."
        },
        "title": {
          "type": "string",
          "description": "Title of the announcement."
        },
        "content": {
          "type": "string",
          "description": "Content of the announcement."
        },
        "createdAt": {
          "type": "string",
          "description": "Date and time when the announcement was created.",
          "format": "date-time"
        },
        "adminId": {
          "type": "string",
          "description": "Reference to UserProfile (as admin). (Relationship: UserProfile 1:N Announcement)"
        }
      },
      "required": [
        "id",
        "title",
        "content",
        "createdAt",
        "adminId"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/userProfiles/{userId}",
        "definition": {
          "entityName": "UserProfile",
          "schema": {
            "$ref": "#/backend/entities/UserProfile"
          },
          "description": "Stores user profile information. The 'userId' parameter is the unique identifier for the user.",
          "params": [
            {
              "name": "userId",
              "description": "Unique identifier for the user."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/notes/{noteId}",
        "definition": {
          "entityName": "Note",
          "schema": {
            "$ref": "#/backend/entities/Note"
          },
          "description": "Stores notes for each user.  Path-based ownership ensures only the user can access their notes. The 'userId' parameter identifies the user, and 'noteId' is the unique identifier for the note.",
          "params": [
            {
              "name": "userId",
              "description": "Unique identifier for the user."
            },
            {
              "name": "noteId",
              "description": "Unique identifier for the note."
            }
          ]
        }
      },
      {
        "path": "/courses/{courseId}",
        "definition": {
          "entityName": "Course",
          "schema": {
            "$ref": "#/backend/entities/Course"
          },
          "description": "Stores course information. Includes the 'instituteId' to identify the institute that owns the course, and 'studentIds' array for enrolled students. The 'courseId' parameter is the unique identifier for the course.",
          "params": [
            {
              "name": "courseId",
              "description": "Unique identifier for the course."
            }
          ]
        }
      },
      {
        "path": "/announcements/{announcementId}",
        "definition": {
          "entityName": "Announcement",
          "schema": {
            "$ref": "#/backend/entities/Announcement"
          },
          "description": "Stores announcements. Accessible to admins. The 'announcementId' parameter is the unique identifier for the announcement.",
          "params": [
            {
              "name": "announcementId",
              "description": "Unique identifier for the announcement."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to ensure security, scalability, and ease of debugging, following the principles of Authorization Independence, Clarity of Intent, DBAC (Database-Based Access Control), and QAPs (Rules are not Filters). Authorization Independence is achieved through denormalization of authorization data.  The use of hierarchical paths for user-owned data (`/users/{userId}/notes/{noteId}`) provides a secure and efficient way to manage access based on ownership. The `announcements` collection is segregated to ensure a homogeneous security posture, allowing for simple list operations. The structure supports QAPs by avoiding the need for filtering in rules.  The `userProfiles` collection stores user profile information. Each user's notes are stored in a subcollection `/users/{userId}/notes`. Courses are stored in the `/courses` collection, with each course document containing an `instituteId` field referencing the institute that owns the course, and a `studentIds` array representing enrolled students. Announcements are stored in the `/announcements` collection, accessible to admins.  This design enables robust security rules without complex `get()` calls, supports atomic operations, and facilitates clear and maintainable authorization logic."
  }
}